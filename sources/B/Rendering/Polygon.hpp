/*
** B, 2019
** Rendering / Polygon.hpp
*/

#pragma once

////////////////////////////////////////////////////////////////////////////////

#include "B/Types.hpp"

////////////////////////////////////////////////////////////////////////////////

namespace B {
	template <usize S>
	class Polygon;

	class Triangle;
}

////////////////////////////////////////////////////////////////////////////////

#include "B/Containers/Array.hpp"
#include "B/Containers/Vector.hpp"
#include "B/Rendering/Vertex.hpp"

////////////////////////////////////////////////////////////////////////////////

namespace B
{

////////////////////////////////////////////////////////////////////////////////

template <usize S>
class Polygon
{
public:
	virtual ~Polygon() = default;

	Vector3 midPoint() const
	{
		Vector3 mid;
		for (auto vtx : vertices)
			mid += vtx.pos;
		return mid /= (f64)vertices.size();
	}

	Array<Vertex, S> vertices;

protected:
	Polygon() {}
};

////////////////////////////////////////////////////////////////////////////////

class Triangle : public Polygon<3>
{
public:
	Triangle() {}
	~Triangle() {}
};

////////////////////////////////////////////////////////////////////////////////

}

/// https://github.com/mrDIMAS/DmitrysEngine/blob/master/math/triangulator.c